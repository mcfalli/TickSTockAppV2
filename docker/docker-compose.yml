# Define project name to ensure consistent container/network naming
x-project-name: tickstock

services:
  flask1:
    build: .
    container_name: tickstock_flask1
    ports:
      - "5001:5000"
    environment:
      - FLASK_ENV=production
      - DATABASE_URL=postgresql://user:pass@postgres/tickstock
      - REDIS_URL=redis://redis:6379
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - tickstock_network

  flask2:
    build: .
    container_name: tickstock_flask2
    ports:
      - "5002:5000"
    environment:
      - FLASK_ENV=production
      - DATABASE_URL=postgresql://user:pass@postgres/tickstock
      - REDIS_URL=redis://redis:6379
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - tickstock_network

  nginx:
    image: nginx:latest
    container_name: tickstock_nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
    depends_on:
      - flask1
      - flask2
    restart: unless-stopped
    networks:
      - tickstock_network

  redis:
    image: redis:6
    container_name: tickstock_redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 10
    restart: unless-stopped
    networks:
      - tickstock_network

  postgres:
    image: postgres:13
    container_name: tickstock_postgres
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=pass
      - POSTGRES_DB=tickstock
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - tickstock_network

  prometheus:
    image: prom/prometheus:latest
    container_name: tickstock_prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    restart: unless-stopped
    networks:
      - tickstock_network

  grafana:
    image: grafana/grafana:latest
    container_name: tickstock_grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    restart: unless-stopped
    networks:
      - tickstock_network

volumes:
  postgres_data:

networks:
  tickstock_network:
    driver: bridge